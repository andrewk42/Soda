/*
 * CS343 A6 Printer Header
 * Written by Marina 2 Samuel (m2samuel)
 * and Andrew J Klamut (ajklamut)
 *
 * November 2011
 */

/* Specifications:
 * All output from the program is generated by calls to a printer, excluding error messages. The printer generates
 * output like that in Figure 2. Each column is assigned to a particular kind of object. There are 8 kinds of objects:
 * parent, WATCard office, name server, truck, bottling plant, student, vending machine, and courier. Student,
 * vending machine, and courier have multiple instances. For the objects with multiple instances, these objects
 * pass in their local identifier [0,N) when printing. Each kind of object prints specific information in its column:
 *
 * Information is buffered until a column is overwritten for a particular entry, which causes the buffered data to
 * be flushed. If there is no new stored information for a column since the last buffer flush, an empty column is printed.
 * When an object finishes, the buffer is flushed immediately, the state for that object is marked with F, and all other
 * objects are marked with “. . . ”. After an object has finished, no further output appears in that column. All output
 * spacing can be accomplished using the standard 8-space tabbing. Buffer any information necessary for printing in
 * internal representation; do not build and store strings of text for output.
 */

#ifndef PRINTER_H
#define PRINTER_H

_Monitor Printer {
    unsigned int num_students, num_machines, num_couriers;
  public:
    enum Kind { Parent, WATCardOffice, NameServer, Truck, BottlingPlant, Student, Vending, Courier };
    Printer( unsigned int numStudents, unsigned int numVendingMachines, unsigned int numCouriers );
    void print( Kind kind, char state );
    void print( Kind kind, char state, int value1 );
    void print( Kind kind, char state, int value1, int value2 );
    void print( Kind kind, unsigned int lid, char state );
    void print( Kind kind, unsigned int lid, char state, int value1 );
    void print( Kind kind, unsigned int lid, char state, int value1, int value2 );
};

_Monitor TestPrinter : public Printer {
    TestPrinter();
    void print(const char *s);
};

#endif
